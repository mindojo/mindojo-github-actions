name: Slack message
description: Sends a Slack message with deploy info
inputs:
  SLACK_WEBHOOK_URL:
    required: true
  platform:
    required: true
  product:
    required: true
  environment:
    required: false
    default: PROD
  jira_tickets:
    required: true


runs:
  using: "composite"
  steps:
    - name: Set up the slack message
      id: slack_message_setup
      shell: bash
      run: |
        VERSION=`python3 -m json.tool ./package.json | python3 -c "import sys, json; print(json.load(sys.stdin)['version'])"`
        BUILD_NUMBER=`git rev-list HEAD --count`
        LIST_OF_JIRA_TICKETS="${{ inputs.jira_tickets }}"
        JIRA_TICKETS=`echo $LIST_OF_JIRA_TICKETS | python3 -c "import sys; tickets=sys.stdin.read().split('--'); tickets=('â€¢ ' + ticket for ticket in tickets); print('--'.join(tickets))"`
        JIRA_TICKETS="${JIRA_TICKETS//$'--'/\\n}"

        SLACK_MESSAGE=$(cat <<EOF
        {
          "blocks": [
            {
              "type": "header",
              "text": {
                "type": "plain_text",
                "text": "A new build is released"
              }
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Platform*\n${{ inputs.platform }}"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Build number*\n$BUILD_NUMBER"
                }
              ]
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "*Product*\n${{ inputs.product }}"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Version*\n$VERSION"
                }
              ]
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "*Environment*\n ${{ inputs.environment }}"
              }
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "*Tasks in the upcoming release*\n $JIRA_TICKETS"
              }
            }
          ]
        }
        EOF
        )

        echo $SLACK_MESSAGE;

        echo "SLACK_MESSAGE<<EOF" >> $GITHUB_ENV
        echo "$SLACK_MESSAGE" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - uses: slackapi/slack-github-action@v1.24.0
      env:
        SLACK_WEBHOOK_URL: ${{ inputs.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      with:
        payload: ${{ env.SLACK_MESSAGE }}
