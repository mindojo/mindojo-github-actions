name: Get JIRA Tickets
description: Retrieves JIRA tickets from the commit messages & their bodies since the last git tag. The list will also contain JIRA tickets in the addon packages such as react-core and react-ui-kit.
inputs:
  private_keys:
    required: true
outputs:
  jira_tickets:
    description: "List of JIRA tickets in the following format: \"PD1-1234--PD2-1235\""
    value: ${{ steps.concat_lists.outputs.jira_tickets }}

runs:
  using: "composite"
  steps:
    - name: Check out to the HEAD of the current repo's branch
      uses: actions/checkout@v2
      with:
        # For the tags to work properly, we need to fetch all the tags
        fetch-depth: 0

    # to be able to access the private repos such as react-core
    - uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ inputs.private_keys }}

    - name: Get the latest git tag
      id: get_latest_git_tag
      shell: bash
      run: |
        git fetch --tags
        TAG="`git describe --tags \`git rev-list --tags --max-count=1\``"
        echo "tag=$TAG" >> $GITHUB_OUTPUT

    - name: Get the list of commits since the last SHA and extract JIRA tasks from them
      id: get_jira_tickets
      shell: bash
      run: |
        LIST_OF_COMMITS=`git log --pretty=format:"%s %b" ${{ steps.get_latest_git_tag.outputs.tag }}..HEAD`
        LIST_OF_JIRA_TICKETS=`echo $LIST_OF_COMMITS | python3 -c "import re, sys; tasks=re.findall(r'\b[A-Z][A-Z0-9_]+-[1-9][0-9]*', sys.stdin.read()); tasks=set(tasks); print('--'.join(task for task in tasks))"`
        echo $LIST_OF_JIRA_TICKETS
        echo "jira_tickets=$LIST_OF_JIRA_TICKETS" >> $GITHUB_OUTPUT

    - name: Get dependencies from the package.json for the HEAD
      id: get_dependencies_updated
      shell: bash
      run: |
        LIST_OF_DEPENDENCIES=`cat package.json | python3 -c "import json, sys; deps=json.load(sys.stdin)['dependencies']; deps=list(deps[dep] for dep in deps if dep.startswith('@mindojo/')); print('--'.join(deps))"`
        echo $LIST_OF_DEPENDENCIES
        echo "dependencies=$LIST_OF_DEPENDENCIES" >> $GITHUB_OUTPUT

    - name: Check out to the latest git tag
      uses: actions/checkout@v2
      with:
        ref: ${{ steps.get_latest_git_tag.outputs.tag }}

    - name: Get dependencies from the package.json for the latest git tag
      id: get_dependencies
      shell: bash
      run: |
        LIST_OF_DEPENDENCIES=`cat package.json | python3 -c "import json, sys; deps=json.load(sys.stdin)['dependencies']; deps=list(deps[dep] for dep in deps if dep.startswith('@mindojo/')); print('--'.join(deps))"`
        echo $LIST_OF_DEPENDENCIES
        echo "dependencies=$LIST_OF_DEPENDENCIES" >> $GITHUB_OUTPUT

    - name: Get JIRA tickets for the dependencies' changes
      id: get_dependencies_jira_tickets
      shell: bash
      run: |
        LIST_OF_DEPENDENCIES=`echo ${{ steps.get_dependencies.outputs.dependencies }} | python3 -c "import sys; print('\n'.join(sys.stdin.read().split('--')))"`
        echo "List of old dependencies:"
        echo $LIST_OF_DEPENDENCIES
        LIST_OF_DEPENDENCIES_UPDATED=`echo ${{ steps.get_dependencies_updated.outputs.dependencies }} | python3 -c "import sys; print('\n'.join(sys.stdin.read().split('--')))"`
        echo "List of updated dependencies:"
        echo $LIST_OF_DEPENDENCIES_UPDATED
        mkdir ./temp_deps
        cd ./temp_deps
        # Each item in the list is in the following format, for example:
        # git+ssh://git@github.com:mindojo/player.git#e1841e5
        # We need to convert it to the following format, for example:
        # git@github.com:mindojo/player.git
        # and then clone it and get a list of tasks between the old and updated version of the dependency.
        FINAL_LIST_OF_JIRA_TICKETS=""
        for DEP in $LIST_OF_DEPENDENCIES_UPDATED; do
          DEP_VERSION=`echo $DEP | python3 -c "import sys; print(sys.stdin.read().split('#')[1])"`
          DEP=`echo $DEP | python3 -c "import sys; print(sys.stdin.read().split('#')[0].split('git+ssh://')[1])"`
          # Get the OLD_DEP_VERSION from the $LIST_OF_DEPENDENCIES
          OLD_DEP_VERSION=`echo $LIST_OF_DEPENDENCIES | python3 -c "import sys; print(sys.stdin.read().split('$DEP')[1].split('#')[1].split(' ')[0])"`
          echo "Dependency, version and its old version:"
          echo $DEP
          echo $DEP_VERSION
          echo $OLD_DEP_VERSION
          git clone $DEP
          DEP_NAME=`echo $DEP | python3 -c "import sys; print(sys.stdin.read().split('/')[1].split('.git')[0])"`
          cd $DEP_NAME
          LIST_OF_COMMITS=`git log --pretty=format:"%s %b" $OLD_DEP_VERSION..$DEP_VERSION`
          LIST_OF_JIRA_TICKETS=`echo $LIST_OF_COMMITS | python3 -c "import re, sys; tasks=re.findall(r'\b[A-Z][A-Z0-9_]+-[1-9][0-9]*', sys.stdin.read()); tasks=set(tasks); print('--'.join(task for task in tasks))"`
          echo "List of JIRA tickets for $DEP_NAME:"
          echo $LIST_OF_JIRA_TICKETS
          FINAL_LIST_OF_JIRA_TICKETS="${FINAL_LIST_OF_JIRA_TICKETS}${LIST_OF_JIRA_TICKETS:+--$LIST_OF_JIRA_TICKETS}"
        done
        echo "Final list of JIRA tickets:"
        echo $FINAL_LIST_OF_JIRA_TICKETS
        echo "jira_tickets=$FINAL_LIST_OF_JIRA_TICKETS" >> $GITHUB_OUTPUT

    - name: Concat the lists from deps and from the host app and send them to the output
      id: concat_lists
      shell: bash
      run: |
        LIST_OF_JIRA_TICKETS_FROM_HOST_APP="${{ steps.get_jira_tickets.outputs.jira_tickets }}"
        echo "List of JIRA tickets from the host app:"
        echo $LIST_OF_JIRA_TICKETS_FROM_HOST_APP
        LIST_OF_JIRA_TICKETS_FROM_DEPS="${{ steps.get_dependencies_jira_tickets.outputs.jira_tickets }}"
        echo "List of JIRA tickets from the dependencies:"
        echo $LIST_OF_JIRA_TICKETS_FROM_DEPS
        FINAL_LIST_OF_JIRA_TICKETS="$LIST_OF_JIRA_TICKETS_FROM_HOST_APP$LIST_OF_JIRA_TICKETS_FROM_DEPS"
        echo "Final list of JIRA tickets:"
        echo $FINAL_LIST_OF_JIRA_TICKETS
        FINAL_LIST_OF_JIRA_TICKETS=`echo $FINAL_LIST_OF_JIRA_TICKETS | python3 -c "import sys; print('--'.join(set(sys.stdin.read().strip().split('--'))))"`
        echo "Final list of JIRA tickets without duplicates:"
        echo $FINAL_LIST_OF_JIRA_TICKETS
        echo "jira_tickets=$FINAL_LIST_OF_JIRA_TICKETS" >> $GITHUB_OUTPUT

    - name: Check out back to the default
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
